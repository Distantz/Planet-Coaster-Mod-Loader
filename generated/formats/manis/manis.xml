<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE niftoolsxml>
<niftoolsxml version="0.7.1.0">



    <token name="verexpr" attrs="vercond cond">
        Commonly used version expressions.
        <verexpr token="#PZ#" string="(#USER# #EQ# 8340)">PZ</verexpr>
        <verexpr token="#JWE#" string="(#USER# #EQ# 24724)">JWE</verexpr>
		<verexpr token="#PC#" string="(#VER# #EQ# 18)">PC</verexpr>
    </token>

    <token name="global" attrs="vercond cond">
        Global Tokens.
        NOTE: These must be listed after the above tokens so that they replace last. For example, `verexpr` uses these tokens.
        <global token="#USER#" string="user_version" />
        <global token="#VER#" string="version" />
    </token>

    <token name="operator" attrs="cond vercond arr1 arr2 arg">
        All Operators except for unary not (!), parentheses, and member of (\)
        NOTE: These can be ignored entirely by string substitution and dealt with directly.
        NOTE: These must be listed after the above tokens so that they replace last. For example, `verexpr` uses these tokens.
        <operator token="#ADD#" string="+" />
        <operator token="#SUB#" string="-" />
        <operator token="#MUL#" string="*" />
        <operator token="#DIV#" string="/" />
        <operator token="#AND#" string="&amp;&amp;" />
        <operator token="#OR#" string="||" />
        <operator token="#LT#" string="&lt;" />
        <operator token="#GT#" string="&gt;" />
        <operator token="#LTE#" string="&lt;=" />
        <operator token="#GTE#" string="&gt;=" />
        <operator token="#EQ#" string="==" />
        <operator token="#NEQ#" string="!=" />
        <operator token="#RSH#" string="&gt;&gt;" />
        <operator token="#LSH#" string="&lt;&lt;" />
        <operator token="#BITAND#" string="&amp;" />
        <operator token="#BITOR#" string="|" />
        <operator token="#MOD#" string="%" />
    </token>
    <!--Basic Types-->

    <basic name="ubyte" count="1">
        An unsigned 8-bit integer.
    </basic>

    <basic name="byte" count="1">
        A signed 8-bit integer.
    </basic>

    <basic name="uint" count="1">
        An unsigned 32-bit integer.
    </basic>

	<basic name="uint64" count="1">
        An unsigned 64-bit integer.
    </basic>

    <basic name="ushort" count="1" >
        An unsigned 16-bit integer.
    </basic>

    <basic name="int" count="1" >
        A signed 32-bit integer.
    </basic>

    <basic name="short" count="1" >
        A signed 16-bit integer.
    </basic>

    <basic name="char" count="0" >
        An 8-bit character.
    </basic>

    <basic name="float" count="0" >
        A standard 32-bit floating point number.
    </basic>

    <compound name="SizedString">
        A string of given length.
        <field name="Length" type="uint">The string length.</field>
        <field name="Value" type="char" arr1="Length">The string itself.</field>
    </compound>

    <basic name="ZString">
        A string of given length.
    </basic>

    <compound name="Matrix44" size="64">
        A 4x4 transformation matrix.
        <field name="m11" type="float" default="1.0">The (1,1) element.</field>
        <field name="m21" type="float" default="0.0">The (2,1) element.</field>
        <field name="m31" type="float" default="0.0">The (3,1) element.</field>
        <field name="m41" type="float" default="0.0">The (4,1) element.</field>
        <field name="m12" type="float" default="0.0">The (1,2) element.</field>
        <field name="m22" type="float" default="1.0">The (2,2) element.</field>
        <field name="m32" type="float" default="0.0">The (3,2) element.</field>
        <field name="m42" type="float" default="0.0">The (4,2) element.</field>
        <field name="m13" type="float" default="0.0">The (1,3) element.</field>
        <field name="m23" type="float" default="0.0">The (2,3) element.</field>
        <field name="m33" type="float" default="1.0">The (3,3) element.</field>
        <field name="m43" type="float" default="0.0">The (4,3) element.</field>
        <field name="m14" type="float" default="0.0">The (1,4) element.</field>
        <field name="m24" type="float" default="0.0">The (2,4) element.</field>
        <field name="m34" type="float" default="0.0">The (3,4) element.</field>
        <field name="m44" type="float" default="1.0">The (4,4) element.</field>
    </compound>

    <compound name="Matrix33" size="36">
        A 3x3 rotation matrix; M^T M=identity, det(M)=1.    Stored in OpenGL column-major format.
        <field name="m11" type="float" default="1.0">Member 1,1 (top left)</field>
        <field name="m21" type="float" default="0.0">Member 2,1</field>
        <field name="m31" type="float" default="0.0">Member 3,1 (bottom left)</field>
        <field name="m12" type="float" default="0.0">Member 1,2</field>
        <field name="m22" type="float" default="1.0">Member 2,2</field>
        <field name="m32" type="float" default="0.0">Member 3,2</field>
        <field name="m13" type="float" default="0.0">Member 1,3 (top right)</field>
        <field name="m23" type="float" default="0.0">Member 2,3</field>
        <field name="m33" type="float" default="1.0">Member 3,3 (bottom left)</field>
    </compound>

	    <compound name="Matrix24" size="32">
        A 4x4 transformation matrix.
        <field name="m11" type="float" default="1.0">The (1,1) element.</field>
        <field name="m21" type="float" default="0.0">The (2,1) element.</field>
        <field name="m31" type="float" default="0.0">The (3,1) element.</field>
        <field name="m41" type="float" default="0.0">The (4,1) element.</field>
        <field name="m12" type="float" default="0.0">The (1,2) element.</field>
        <field name="m22" type="float" default="1.0">The (2,2) element.</field>
        <field name="m32" type="float" default="0.0">The (3,2) element.</field>
        <field name="m42" type="float" default="0.0">The (4,2) element.</field>
    </compound>

    <compound name="ByteColor4" size="4" convertible="Color4">
        A color with alpha (red, green, blue, alpha).
        <field name="r" type="ubyte">Red color component.</field>
        <field name="g" type="ubyte">Green color component.</field>
        <field name="b" type="ubyte">Blue color component.</field>
        <field name="a" type="ubyte">Alpha color component.</field>
    </compound>

    <compound name="UshortVector2" size="4">
        A vector in 2D space (x,y).
        <field name="u" type="ushort">First coordinate.</field>
        <field name="v" type="ushort">Second coordinate.</field>
    </compound>

    <compound name="UbyteVector3" size="3">
        A vector in 3D space (x,y,z).
        <field name="x" type="ubyte">First coordinate.</field>
        <field name="y" type="ubyte">Second coordinate.</field>
        <field name="z" type="ubyte">Third coordinate.</field>
    </compound>

    <compound name="Vector3" size="12">
        A vector in 3D space (x,y,z).
        <field name="x" type="float">First coordinate.</field>
        <field name="y" type="float">Second coordinate.</field>
        <field name="z" type="float">Third coordinate.</field>
    </compound>

    <compound name="Vector4" size="16">
        A vector in 3D space (x,y,z).
        <field name="w" type="float">zeroth coordinate.</field>
        <field name="x" type="float">First coordinate.</field>
        <field name="y" type="float">Second coordinate.</field>
        <field name="z" type="float">Third coordinate.</field>
    </compound>



    <compound name="SizedStrData">
        <add name="a" type="ushort"/>
        <add name="hash block size" type="ushort"/>
        <add name="zeros" type="int" arr1="2"/>
        <add name="c" type="ushort"/>
    </compound>

    <compound name="InfoHeader">
        Custom header struct
        <add name="magic" type="byte" arr1="4">'MANI'</add>
        <add name="version" type="uint"/>
        <add name="flag 2" type="uint"/>
        <add name="mani count" type="uint"/>
        <add name="names" type="ZString" arr1="mani count"/>
        <add name="header" type="SizedStrData"/>
<!--        end of sizedstr bytes + buffer 0-->
        <add name="mani infos" type="ManiInfo" arr1="mani count"/>
		<add name="bone hashes" type="uint" arr1="header\hash block size / 4" ></add>
		<add name="bone names" type="ZString" arr1="header\hash block size / 4" ></add>

    </compound>

	<compound name="ManiInfo" >
        288 bytes for JWE / PZ
        312 bytes for PC
		<add name="zeros start" type="ushort" arr1="5" > </add>
        <add name="duration" type="float"/>
		<add name="frame count" type="uint" >likely</add>
		<add name="b" type="uint" > </add>
		<add name="zeros 0 " type="ushort" arr1="7"  > rest </add>
		<add name="c" type="ushort" > </add>
		<add name="name count" type="ushort" > </add>
		<add name="zeros 1" type="ushort" arr1="4" > rest </add>
		<add name="e" type="ushort" > </add>
		<add name="extra pc" type="ushort" arr1="5" cond="#PC#"> </add>
		<add name="ffff" type="ushort" >always FF FF</add>
		<add name="g" type="ushort" > </add>
		<add name="zeros 2" type="uint" arr1="57"  > rest 228 bytes </add>
		<add name="extra zeros pc" type="ushort" arr1="7" cond="#PC#" > rest 14 bytes </add>
		<add name="i" type="ushort" > </add>
		<add name="j" type="ushort" > </add>
		<add name="ff" type="ushort" > always FF </add>
    </compound>

	<compound name="ManiBlock" >
<!--            name_indices_0 = struct.unpack(f"<{mani_info.c}I", stream.read(mani_info.c * 4))-->
<!--			print("name_indices_0", name_indices_0)-->
<!--			name_indices_1 = struct.unpack(f"<{mani_info.name_count}I", stream.read(mani_info.name_count * 4))-->
<!--			print("name_indices_1", name_indices_1)-->
<!--			name_indices_2 = struct.unpack(f"<{mani_info.e}I", stream.read(mani_info.e * 4))-->
<!--			print("name_indices_2", name_indices_2)-->
<!--			p_indices_0 = struct.unpack(f"<{mani_info.c}B", stream.read(mani_info.c))-->
<!--			print("p_indices_0", p_indices_0)-->
<!--			p_indices_1 = struct.unpack(f"<{mani_info.name_count}B", stream.read(mani_info.name_count))-->
<!--			print("p_indices_1", p_indices_1)-->
<!--			p_indices_2 = struct.unpack(f"<{mani_info.e}B", stream.read(mani_info.e))-->
<!--			print("p_indices_2", p_indices_2)-->
<!--    PC uses ushort-->
		<add name="indices 0" type="ushort" arr1="#ARG#\c" cond="#PC#" > </add>
		<add name="indices 1" type="ushort" arr1="#ARG#\name count" cond="#PC#" > </add>
		<add name="indices 2" type="ushort" arr1="#ARG#\e" cond="#PC#" > </add>
<!--    JWE uses uint-->
		<add name="indices 0" type="uint" arr1="#ARG#\c" cond="!#PC#" > </add>
		<add name="indices 1" type="uint" arr1="#ARG#\name count" cond="!#PC#" > </add>
		<add name="indices 2" type="uint" arr1="#ARG#\e" cond="!#PC#" > </add>

		<add name="p indices 0" type="ubyte" arr1="#ARG#\c" > </add>
		<add name="p indices 1" type="ubyte" arr1="#ARG#\name count" > </add>
		<add name="p indices 2" type="ubyte" arr1="#ARG#\e" > </add>

		<add name="c indices 0" type="ubyte" arr1="#ARG#\c" cond="#PC#"> </add>
		<add name="c indices 1" type="ubyte" arr1="#ARG#\name count" cond="#PC#" > </add>
		<add name="c indices 2" type="ubyte" arr1="#ARG#\e" cond="#PC#" > </add>

<!--		<add name="padding" type="ubyte" arr1="(16 - (((#ARG#\c + #ARG#\name count + #ARG#\e) * 4)  % 16)) % 16" > </add>-->
		two uint zeros, or padding
		<add name="zero" type="uint64" > </add>
		<add name="frame count" type="uint" >likely</add>
		<add name="c" type="uint" > </add>
		<add name="e" type="uint" > </add>
		<add name="zeros" type="uint" arr1="19">fixed</add>
		<add name="count" type="ushort" > </add>
		<add name="four and twenty" type="ushort" >usually / always 420</add>
        <add name="zeros" type="ubyte" arr1="count" > </add>
        <add name="pad to 8" type="ubyte" arr1="(8 - (count  % 8)) % 8" > </add>
        <add name="floats" type="float" arr1="6" >these are likely a scale reference or factor</add>
        <add name="repeats" type="Repeat" arr1="count" > </add>

    </compound>

    <compound name="Repeat" >
		<add name="zeros 0" type="uint" arr1="15" > </add>
		<add name="byte size" type="uint" >to be read sequentially starting after this array </add>
		<add name="zeros 1" type="uint" arr1="4" > </add>
    </compound>


</niftoolsxml>
